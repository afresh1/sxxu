#!/bin/sh
# $Id$

OSREV=$(uname -r| sed 's/\.//g')
SRCDIR=`pwd`
COMMONDIR=common
WRKDIR=`mktemp -d`
RELEASEDIR=/tmp

function copy_special {
    local _src=$1
    local _dst=$2

    if [ ! -d $_src ]; then
        echo "$_src does not exist!"
        return
    fi
    
    cd $_src
    find . \
        ! -path './siteXX*' \
        ! -path '*/CVS*' \
        ! -path '*/.git*' \
        ! -path '*/.svn*' \
    | {
        local _file
        while read _file ; do
            if [ -d $_file ]; then
                mkdir -p ${_dst}/${_file}
            else
                cp $_file ${_dst}/${_file}
            fi
        done
    }

    cd ${OLDPWD}
}

function populate_from {
    local _src=$1

    if [ X"${_src}" == X"" ]; then
        echo "populate_from <dir>"
        return
    fi
    if [ ! -d ${SRCDIR}/${_src} ]; then
        return
    fi

    echo -n " $_src"

    copy_special "${SRCDIR}/${_src}" "${WRKINST}"

    if [ -d ${SRCDIR}/${_src}/siteXX ]; then
        copy_special ${SRCDIR}/${_src}/siteXX ${WRKINST}/var/siteXX/${_src}
        if [ -e ${SRCDIR}/${_src}/siteXX/roles ]; then
            {
                local _role
                while read _role; do
                    populate_from $_role
                done
            } < ${SRCDIR}/${_src}/siteXX/roles 
        fi
    fi


}

machines=$*
if [ X"${machines}" == X"" ]; then
	local _d
	for _d in *; do
        [ ${_d#role-} != $_d ] && continue
		machines="${machines} ${_d}"
	done
fi

for machine in ${machines} ; do
	local _site=site${OSREV}
	if [ X"${machine}" != X"${COMMONDIR}" ]; then
        _site=${_site}-${machine}
    fi

    echo -n populating:

    WRKINST=${WRKDIR}/${_site}

    populate_from ${machine}

    if [ X"${machine}" != X"${COMMONDIR}" \
        -a -d ${SRCDIR}/${COMMONDIR} ]; then
        populate_from $COMMONDIR
    fi

    local _tgz=${RELEASEDIR}/${_site}.tgz
    echo -n "\n  creating $_tgz"
	tar -cz -C ${WRKINST} -f $_tgz .
    echo ' . . . done'
done

rm -rf $WRKDIR
