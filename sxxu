#!/bin/sh
# $Id$

# Copyright (c) 2010 Andrew Fresh <andrew@afresh1.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# based on siteXXtools/generate 
# Copyright (c) 2006 Alex Holst <a@mongers.org>

OSREV=$(uname -r| sed 's/\.//g')
SRCDIR=`pwd`
COMMONDIR=common
RELEASEDIR=/tmp
INSTALL_SITE=install.siteXX

function copy_special {
    local _src="$1"
    local _dst="$2"

    if [ ! -d "$_src" ]; then
        echo "$_src does not exist!"
        return
    fi
    
    cd "$_src"
    find . \( \
        -path './siteXX' \
        -o -name 'CVS' \
        -o -name '.git' \
        -o -name '.svn' \
        \) -prune -o -print \
    | {
        local _file
        while read _file ; do
            if [ -d "$_file" ]; then
                mkdir -p "${_dst}/${_file}"
            else
                cp "$_file" "${_dst}/${_file}"
            fi
        done
    }

    cd "${OLDPWD}"
}

function include {
    local _src="$1"

    if [ X"${_src}" == X"" ]; then
        echo "include <dir>"
        return
    fi
    if [ ! -d "${SRCDIR}/${_src}" ]; then
        return
    fi

    local _siteXX_src="${SRCDIR}/${_src}/siteXX"
    local _siteXX_dst="${WRKINST}/var/siteXX/${_src}"
    if [ -d "$_siteXX_dst" ]; then
        echo -n " !!!${_src}!!!"
        return
    fi
    mkdir -p "$_siteXX_dst"
    
    echo -n " $_src"

    copy_special "${SRCDIR}/${_src}" "${WRKINST}"

    if [ -d "$_siteXX_src" ]; then
        copy_special "$_siteXX_src" "$_siteXX_dst"

        if [ -z "$REGEN_MTREE" -a -e "${_siteXX_src}/mtree" ]; then
            mtree -Uep "${WRKINST}" < "${_siteXX_src}/mtree" > /dev/null

            local _mtree_out=`mktemp`
            mtree -ep "${WRKINST}" < "${_siteXX_src}/mtree"  > $_mtree_out
            if [ $? -ne 0 ]; then
                echo "\nMTREE PROBLEMS FOUND"
                cat $_mtree_out
            fi
            rm -f $_mtree_out
        fi

        [ -z "$NORECURSE" ] || return

        if [ -e "${_siteXX_src}/roles" ]; then
            local _role
            while read _role; do
                include "$_role"
            done < "${_siteXX_src}/roles"
        fi
    fi
}

cd ${SRCDIR}

for _INSTALL_SITE in \
    install.site \
    "${SAMPLE_DIR}/install.siteXX" \
    "${SAMPLE_DIR}/install.site" 
do
    if [ -e "$_INSTALL_SITE" ]; then
        INSTALL_SITE="$_INSTALL_SITE" 
        break
    fi
done

local _cfg
for _cfg in .siteXXrc ~/.siteXXrc /etc/siteXX.conf; do
    [ -e $_cfg ] && . $_cfg && break
done

while getopts mkw:R arg; do
    case ${arg} in 
    m)
        REGEN_MTREE=1
        NORECURSE=1
    ;;
    R)
        NORECURSE=1
    ;;
    k)
        NOREMOVE=1
    ;;
    w)
        WRKDIR=${OPTARG}
    esac
done
shift $(($OPTIND - 1))

if [ -z "$WRKDIR" ]; then
    WRKDIR=`mktemp -d -t sxxu.XXXXXXXXX` || exit 1
fi


set -A machines -- "$@"
if [ ${#machines[@]} -eq 0 ]; then
    local _i=0
    local _d
    for _d in *; do
        [ ! -d "$_d" ] && continue
        if [ -z "${REGEN_MTREE}" ]; then
            [ "${_d#role-}" != "$_d" ] && continue
        fi
		machines[$_i]="${_d}"
        _i=$((_i+1))
	done
fi

local machine
for machine in "${machines[@]}"; do
    machine=`basename -- "$machine"`

    if [ ! -d "${machine}" ]; then
        echo ${machine} does not exist
        continue
    fi

	local _site=site${OSREV}
	if [ X"${machine}" != X"${COMMONDIR}" ]; then
        _site="${_site}-${machine}"
    fi

    echo populating: $_site

    WRKINST="${WRKDIR}/${_site}"

    echo -n ' including:'
    include "${machine}"

    if [ ! -z "${REGEN_MTREE}" ]; then
        echo -n "\n regenerate mtree"
        mkdir -p "${SRCDIR}/${machine}/siteXX"
        mtree -cp "${WRKINST}" -k uid,gid,mode > "${SRCDIR}/${machine}/siteXX/mtree"
    elif [ -z "$NORECURSE" ]; then
        if [ X"${machine}" != X"${COMMONDIR}" \
            -a -d "${SRCDIR}/${COMMONDIR}" ]; then
            include $COMMONDIR
        fi

        if [ -e "${INSTALL_SITE}" ]; then
            cp ${INSTALL_SITE} "$WRKINST/install.site"
        fi

        local _tgz="${RELEASEDIR}/${_site}.tgz"
        echo -n "\n  creating: $_tgz"
        tar -cz -C "${WRKINST}" -f "$_tgz" .
    
    fi
    echo ' . . . done'
done

if [ -z "$NOREMOVE" ]; then
    rm -rf $WRKDIR
fi
